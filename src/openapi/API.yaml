openapi: 3.0.0
x-stoplight:
  id: y514b4m78u0va
info:
  title: API-v1
  version: "1.0"
  description: Microlend API version one
  contact:
    name: Nana Kwesi Ofosu-Aikins
    url: nanaaikinson.com
    email: nanaaikinson24@gmail.com
servers:
  - url: "http://localhost:3000"
  - url: "http://microlend.test/api/v1"
    description: ""
tags:
  - name: auth
  - name: customers
  - name: loans
  - name: transactions
  - name: files
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: ""
      operationId: auth-login
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
      description: Endpoint for signing in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
  /auth/user:
    get:
      summary: Your GET endpoint
      tags:
        - auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
      operationId: auth-user
      security:
        - Authorization: []
      description: Endpoint for fetching the current authenticated user
  /files/upload:
    post:
      tags:
        - files
      summary: ""
      operationId: file-upload
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadedFile"
      security:
        - Authorization: []
      parameters: []
      description: Endpoint for uploading a fiel
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileUploadRequest"
        description: ""
    parameters: []
  /customers:
    post:
      tags:
        - customers
      summary: ""
      operationId: create-customer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: {}
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/Customer"
                required:
                  - message
                  - status
                  - data
      description: Endpoint for creating a new customer
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreCustomerRequest"
    get:
      summary: ""
      operationId: get-customers
      tags:
        - customers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data:
                      - id: MO9NIEDS7OSBCGU
                        firstName: John
                        lastName: Doe
                        email: null
                        phoneNumber: "0244815126"
                        secondaryPhone: null
                        occupation: null
                        gpAddress: null
                        postalAddress: null
                        dateOfBirth: null
                        gender: Female
                        maritalStatus: Single
                        sourceOfIncome: null
                        avatar: null
                        identification: {}
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Customer"
                required:
                  - message
                  - status
                  - data
      security:
        - Authorization: []
      description: Endpoint for fetching a list of customers
  /customers/search:
    get:
      summary: ""
      tags:
        - customers
      parameters:
        - in: query
          name: q
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data:
                      - id: MO9NIEDS7OSBCGU
                        name: John Doe
                        email: null
                        phone: "0244815126"
                      - id: LNADAQ4Z5NO1AGY
                        name: Kofi Atta
                        email: null
                        phone: "0241726707"
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                          nullable: true
                        phone:
                          type: string
                      required:
                        - id
                        - name
                        - email
                        - phone
                required:
                  - message
                  - status
                  - data
      operationId: customers-search
      security:
        - Authorization: []
      description: Endpoint for searching for customer(s) with limited data
    parameters: []
  "/customers/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Customer Id
    get:
      summary: ""
      tags:
        - customers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Customer"
                  message:
                    type: string
                  status:
                    type: integer
                required:
                  - data
                  - message
                  - status
      operationId: get-customer
      security:
        - Authorization: []
      x-extension-1: null
      description: Endpoint for fetching a particular customer
    patch:
      tags:
        - customers
      summary: ""
      operationId: update-customer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: {}
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/Customer"
                required:
                  - message
                  - status
                  - data
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreCustomerRequest"
      description: Endpoint for updating a particular customer
  "/customers/{id}/loans":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ""
      tags:
        - customers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: []
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Loan"
                required:
                  - message
                  - status
                  - data
      operationId: customer-loans
      parameters: []
      security:
        - Authorization: []
      description: Endpoint for fetching a particular customer's loans
  "/customers/{id}/transactions":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ""
      tags:
        - customers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: []
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
                required:
                  - message
                  - status
                  - data
      operationId: customer-transactions
      parameters: []
      security:
        - Authorization: []
      description: Endpoint for fetching a particular customer's transactions
  "/customers/{id}/attach-loan":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Customer Id
    patch:
      tags:
        - customers
      summary: ""
      operationId: attach-loan
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                loanId:
                  type: string
              required:
                - loanId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: null
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    nullable: true
                required:
                  - message
                  - status
                  - data
      description: Endpoint for attaching a loan to a particular customer
  "/customers/{id}/update-avatar":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Customer Id
    patch:
      tags:
        - customers
      summary: ""
      operationId: update-avatar
      security:
        - Authorization: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: null
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    nullable: true
                required:
                  - message
                  - status
                  - data
      description: Endpoint for updating a particular customer's profile picture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  key: 1
                  url: "https://example.com/profile/12nnr34nf.jpg"
              properties:
                key:
                  type: integer
                url:
                  type: string
              required:
                - key
                - url
  "/customers/{id}/transact":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Customer Id
    post:
      summary: ""
      tags:
        - customers
      operationId: customer-transact
      responses:
        "200":
          description: OK
      security:
        - Authorization: []
      description: Endpoint for transacting on behalf of a particular customer
  /loans:
    get:
      summary: Your GET endpoint
      tags:
        - loans
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: Loan found successfully
                    status: 200
                    data: []
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Loan"
                required:
                  - message
                  - status
                  - data
      operationId: get-loans
      security:
        - Authorization: []
      description: Endpoint for fetching a list of loans
    post:
      tags:
        - loans
      summary: ""
      operationId: create-loan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: Loan found successfully
                    status: 200
                    data: {}
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/Loan"
                required:
                  - message
                  - status
                  - data
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanRequest"
        description: ""
      description: Endpoint for creating a new loan
  "/loans/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Loan
      tags:
        - loans
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: Loan found successfully
                    status: 200
                    data: {}
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/Loan"
                required:
                  - message
                  - status
                  - data
      operationId: get-loan
      security:
        - Authorization: []
      description: Endpoint for fetching a particular loan
    patch:
      tags:
        - loans
      summary: ""
      operationId: update-loan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: null
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/Loan"
                required:
                  - message
                  - status
                  - data
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanRequest"
        description: ""
      description: Endpoint for updating a particular loan
  "/loans/{id}/approval":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      tags:
        - loans
      summary: ""
      operationId: loan-approval
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: {}
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/Loan"
                required:
                  - message
                  - status
                  - data
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  status: ""
              properties:
                status:
                  type: string
                  enum:
                    - approved
                    - rejected
              required:
                - status
      description: Endpoint for loan approval
  "/loans/{id}/repayments":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ""
      tags:
        - loans
      operationId: get-loan-repayments
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data:
                      - id: TRX_iuVHuiEg2c
                        amount: 400
                        currency: GHS
                        type: loan repayment
                        description: null
                        reference: 98c5f9a7-37ec-4033-be68-623520638593
                        loanRepayment: true
                        createdAt: "2023-03-25T16:10:44.000000Z"
                        status: pending
                      - id: TRX_9SBGkHnEt0
                        amount: 300
                        currency: GHS
                        type: loan repayment
                        description: null
                        reference: 98c5f999-da71-4905-9ba8-0248d1e8d304
                        loanRepayment: true
                        createdAt: "2023-03-25T16:10:35.000000Z"
                        status: pending
                      - id: TRX_MUkRaFUZ7w
                        amount: 300
                        currency: GHS
                        type: loan repayment
                        description: null
                        reference: 98c5f976-9021-48ee-9ea0-6619f0628f34
                        loanRepayment: true
                        createdAt: "2023-03-25T16:10:12.000000Z"
                        status: pending
                      - id: TRX_DYctLoq9LR
                        amount: 300
                        currency: GHS
                        type: loan repayment
                        description: null
                        reference: 98c5f968-4b8d-4e36-ae7b-5e22f6d6d2cd
                        loanRepayment: true
                        createdAt: "2023-03-25T16:10:03.000000Z"
                        status: pending
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
                required:
                  - message
                  - status
                  - data
      description: Endpoind for fetch a particular loan's repayments
      security:
        - Authorization: []
    post:
      summary: ""
      tags:
        - loans
      operationId: loan-repayment
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: 200
                    data: {}
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/Transaction"
                required:
                  - message
                  - status
                  - data
      description: Endpoint for repayment of a particluar loan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreTransactionRequest"
      security:
        - Authorization: []
  /transactions:
    get:
      summary: Get transactions
      tags:
        - transactions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: ""
                    status: ""
                    data: {}
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
                required:
                  - message
                  - status
                  - data
      operationId: get-transactions
      parameters: []
      security:
        - Authorization: []
      description: Endpoint for fetching a list of transactions
    post:
      tags:
        - transactions
      summary: Create transaction
      operationId: create-transaction
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreTransactionRequest"
      description: Endpoint for fetching transacting
  "/transactions/{id}":
    get:
      summary: Get transaction
      tags:
        - transactions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
      operationId: get-transaction
      parameters: []
      security:
        - Authorization: []
      description: Endpoint for fetching a particular transaction
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: ""
      tags:
        - transactions
      operationId: update-transaction
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreTransactionRequest"
      description: Endpoint for updating a particular transaction
components:
  schemas:
    Customer:
      type: object
      x-examples:
        Example 1:
          id: MO9NIEDS7OSBCGU
          firstName: John
          lastName: Doe
          email: null
          phoneNumber: "0244815126"
          secondaryPhone: null
          occupation: null
          gpAddress: null
          postalAddress: null
          dateOfBirth: null
          gender: Female
          maritalStatus: Single
          sourceOfIncome: null
          avatar: null
      description: Customer Model
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
        secondaryPhone:
          type: string
          nullable: true
        occupation:
          type: string
          nullable: true
        gpAddress:
          type: string
          nullable: true
        postalAddress:
          type: string
          nullable: true
        dateOfBirth:
          type: string
        gender:
          type: string
          nullable: true
        maritalStatus:
          type: string
          nullable: true
        sourceOfIncome:
          type: string
          nullable: true
        avatar:
          type: string
          nullable: true
        identification:
          $ref: "#/components/schemas/Identification"
        createdAt:
          type: string
      required:
        - id
        - firstName
        - lastName
        - email
        - phoneNumber
        - secondaryPhone
        - occupation
        - gpAddress
        - postalAddress
        - dateOfBirth
        - gender
        - maritalStatus
        - sourceOfIncome
        - avatar
        - createdAt
      title: ""
    Identification:
      type: object
      x-examples:
        Example 1:
          id: YTKZENMRJNMEBVN
          number: "1234567"
          type: Passport
          issueDate: "2020-10-01"
          expiryDate: "2030-10-01"
          issuingAuthority: Passport Gov
          issuingCountry: Ghana
          front:
            key: 6
            url: "http://microlend.test/uploads/IDENTIFICATION_FRONT/c5f9f22eaea6b81940f1bd2e1afe1493.png"
          back:
            key: 7
            url: "http://microlend.test/uploads/IDENTIFICATION_BACK/c5f9f22eaea6b81940f1bd2e1afe1493.png"
      properties:
        id:
          type: string
        number:
          type: string
        type:
          type: string
        issueDate:
          type: string
        expiryDate:
          type: string
        issuingAuthority:
          type: string
        issuingCountry:
          type: string
        front:
          type: object
          required:
            - key
            - url
          properties:
            key:
              type: integer
            url:
              type: string
        back:
          type: object
          required:
            - key
            - url
          properties:
            key:
              type: integer
            url:
              type: string
      required:
        - id
        - number
        - type
        - issueDate
        - expiryDate
        - issuingAuthority
        - issuingCountry
        - front
        - back
    Loan:
      type: object
      x-examples:
        Example 1:
          id: LO_Ue7O3XC4DcqEHb4s7C1R
          type: personal
          status: pending
          amount: 3000
          totalAmount: 3400
          amountPaid: 0
          amountDue: 3000
          repaymentFrequency: bi-weekly
          interestRate: 400
          interestRateType: amount
          startDate: "2023-04-01"
          endDate: "2023-07-01"
          duration: 3
          customer:
            id: CUS_vyecouz8emdhztu2v2ay
            firstName: Nana Kwesi
            lastName: Ofosu-Aikins
          repaymentAmount: 486
          numberOfRepayments: 7
          nextRepaymentDate: null
          progress: 0
          loanNumber: "980008445546277"
          currency: GHS
          createdAt: "2023-03-24T07:40:37.000000Z"
      x-stoplight:
        id: fe973cda0ce93
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - personal
            - business
        status:
          type: string
          enum:
            - pending
            - approved
            - rejected
            - closed
            - written off
        repaymentFrequency:
          type: string
          enum:
            - daily
            - weekly
            - bi-weekly
            - monthly
            - quarterly
            - annually
        amount:
          type: integer
        totalAmount:
          type: integer
        amountPaid:
          type: integer
        amountDue:
          type: integer
        interestRate:
          type: integer
        interestRateType:
          type: string
          enum:
            - amount
            - percentage
        startDate:
          type: string
        endDate:
          type: string
        duration:
          type: integer
        customer:
          $ref: "#/components/schemas/Customer"
        repaymentAmount:
          type: integer
        numberOfRepayments:
          type: integer
        nextRepaymentDate:
          nullable: true
        progress:
          type: integer
        loanNumber:
          type: string
        currency:
          type: string
        createdAt:
          type: string
      required:
        - id
        - type
        - status
        - repaymentFrequency
        - amount
        - totalAmount
        - amountPaid
        - amountDue
        - interestRate
        - interestRateType
        - startDate
        - endDate
        - duration
        - repaymentAmount
        - numberOfRepayments
        - nextRepaymentDate
        - progress
        - loanNumber
        - currency
        - createdAt
    StoreCustomerRequest:
      type: object
      x-examples:
        Example 1:
          firstName: John
          lastName: Doe
          phoneNumber: "0244815126"
          secondaryPhone: ""
          email: ""
          occupation: ""
          gpAddress: ""
          postalAddress: ""
          idNumber: ""
          idType: ""
          idIssueDate: ""
          idExpiryDate: ""
          idIssuingAuthority: ""
          idIssuingCountry: ""
          idFrontUrl: ""
          idFrontKey: ""
          idBackUrl: ""
          idBackKey: ""
          dateOfBirth: ""
          maritalStatus: ""
          sourceOfIncome: ""
          gender: ""
      title: StoreCustomerRequest
      x-stoplight:
        id: 0b680ac3167ff
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        secondaryPhone:
          type: string
        email:
          type: string
        occupation:
          type: string
        gpAddress:
          type: string
        postalAddress:
          type: string
        idNumber:
          type: string
        idType:
          type: string
          enum:
            - Ghana Card
            - Passport
            - Drivers License
        idIssueDate:
          type: string
        idExpiryDate:
          type: string
        idIssuingAuthority:
          type: string
        idIssuingCountry:
          type: string
        idFrontUrl:
          type: string
        idFrontKey:
          type: string
        idBackUrl:
          type: string
        idBackKey:
          type: string
        dateOfBirth:
          type: string
        maritalStatus:
          type: string
          enum:
            - single
            - married
            - divorced
            - widowed
            - separated
        sourceOfIncome:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
      required:
        - firstName
        - lastName
        - phoneNumber
        - maritalStatus
        - gender
    LoanRequest:
      type: object
      x-examples:
        Example 1:
          amount: 3000
          type: personal
          repaymentFrequency: bi-weekly
          startDate: "2023-03-01"
          interestRate: 40
          duration: 3
          customerId: LNADAQ4Z5NO1AGY
      description: Create loan request model
      x-stoplight:
        id: eacaf4ffc8346
      properties:
        amount:
          type: integer
          minimum: 0
        type:
          type: string
          enum:
            - personal
            - business
        repaymentFrequency:
          type: string
          enum:
            - daily
            - weekly
            - bi-weekly
            - monthly
            - quarterly
            - annually
        startDate:
          type: string
        interestRate:
          type: integer
        duration:
          type: integer
          minimum: 0
        customerId:
          type: string
          nullable: true
        interestRateType:
          type: string
          enum:
            - amount
            - percentage
      required:
        - amount
        - type
        - repaymentFrequency
        - startDate
        - interestRate
        - duration
        - interestRateType
    LoginRequest:
      type: object
      x-examples:
        Example 1:
          email: jhintz@example.com
          password: password
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      x-examples:
        Example 1:
          message: Login successful
          status: 200
          data:
            accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbWljcm9sZW5kLnRlc3QvYXBpL3YxL2F1dGgvbG9naW4iLCJpYXQiOjE2NzcwMDM5NzMsImV4cCI6MTY3NzAwNzU3MywibmJmIjoxNjc3MDAzOTczLCJqdGkiOiJmTHBrYmJ0OWNrUWtXRzd6Iiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.pbNKaPWxLHH_oapFhMnGncCFw26j7ooX4kla7I1eNM4
            tokenType: bearer
            expiresIn: "2023-02-21 19:26:13"
      properties:
        message:
          type: string
        status:
          type: integer
        data:
          type: object
          required:
            - accessToken
            - tokenType
            - expiresAt
          properties:
            accessToken:
              type: string
            tokenType:
              type: string
            expiresAt:
              type: string
      required:
        - message
        - status
        - data
    UploadedFile:
      type: object
      x-examples:
        Example 1:
          message: File uploaded successfully
          status: 200
          data:
            key: 2
            url: "http://microlend.test/uploads/c5f9f22eaea6b81940f1bd2e1afe1493.png"
      properties:
        message:
          type: string
        status:
          type: integer
        data:
          type: object
          required:
            - key
            - url
          properties:
            key:
              type: integer
            url:
              type: string
      required:
        - message
        - status
        - data
      title: UploadedFile
      x-stoplight:
        id: 542117ae49fd1
    AuthUser:
      type: object
      x-examples:
        Example 1:
          message: ""
          status: 200
          data:
            id: QEBDJY56677GHH
            name: John Doe
            email: jdoe@example.com
      properties:
        message:
          type: string
        status:
          type: integer
        data:
          type: object
          required:
            - id
            - name
            - email
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
      required:
        - message
        - status
        - data
    FileUploadRequest:
      title: FileUploadRequest
      x-stoplight:
        id: p9lobvliwx23a
      type: object
      properties:
        file:
          type: string
          format: binary
        category:
          type: string
          enum:
            - IDENTIFICATION_FRONT
            - IDENTIFICATION_BACK
            - PROFILE
            - OTHER
      required:
        - file
        - category
    Transaction:
      type: object
      x-examples:
        Example 1:
          id: WKVAMSCJWYG6T5G
          customer: {}
          loan: null
          amount: 200
          currency: GHS
          type: credit
          description: null
          reference: null
          loanRepayment: 0
          createdAt: "2023-03-16T08:52:22.000000Z"
      properties:
        id:
          type: string
        customer:
          $ref: "#/components/schemas/Customer"
        loan:
          $ref: "#/components/schemas/Customer"
        amount:
          type: integer
        currency:
          type: string
        type:
          type: string
        status:
          type: string
          enum:
            - success
            - failed
            - pending
            - reversed
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        loanRepayment:
          type: boolean
        createdAt:
          type: string
      required:
        - id
        - amount
        - currency
        - type
        - status
        - description
        - reference
        - loanRepayment
        - createdAt
    StoreTransactionRequest:
      type: object
      x-examples:
        Example 1:
          customer: YDSALN5ICMP91OS
          amount: 3000
          currency: GHS
          type: credit
          loan: UJ0VZAUAKTJ7T2H
          description: ""
          reference: ""
      properties:
        customer:
          type: string
        amount:
          type: integer
        currency:
          type: string
        type:
          type: string
          enum:
            - debit
            - credit
            - loan repayment
        loan:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
      required:
        - customer
        - amount
        - currency
        - type
        - loan
        - note
    TransactionResponse:
      type: object
      x-examples:
        Example 1:
          message: ""
          status: 200
          data: {}
      properties:
        message:
          type: string
        status:
          type: integer
        data:
          $ref: "#/components/schemas/Transaction"
      required:
        - message
        - status
        - data
      title: ""
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: ""
